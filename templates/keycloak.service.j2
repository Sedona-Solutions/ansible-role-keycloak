[Unit]
Description=Keycloak Identity and Access manager
After=syslog.target network.target

[Service]
Type=simple
{% if keycloak_dev_mode %}
ExecStart=/usr/bin/bash {{ keycloak_release_folder }}/bin/kc.sh --verbose start-dev {% if not keycloak_initialized %} --http-enabled=true{% endif %}
{% else %}
ExecStart=/usr/bin/bash {{ keycloak_release_folder }}/bin/kc.sh --verbose start --optimized {% if not keycloak_initialized %} --http-enabled=true{% endif %}
{% endif %}

WorkingDirectory={{ keycloak_release_folder }}

Restart=on-failure
RestartSec=2s
# Disable timeout logic and wait until process is stopped
TimeoutStopSec=0
# SIGTERM signal is used to stop the Java process
KillSignal=SIGTERM
# Send the signal only to the JVM rather than its control group
KillMode=process
# Java process is never killed
SendSIGKILL=no
# When a JVM receives a SIGTERM signal it exits with code 143
SuccessExitStatus=143
LimitMEMLOCK=infinity
LimitNOFILE=65535

User={{ keycloak_service_user }}
Group={{ keycloak_service_user }}

PrivateUsers=true

StandardOutput=journal
StandardError=journal

{% if ansible_systemd_version | int >= 247 and keycloak_cert_file is defined and keycloak_key_file is defined %}
LoadCredential=cert.pem:{{ keycloak_cert_file }}
LoadCredential=key.pem:{{ keycloak_key_file }}
Environment=KC_HTTPS_CERTIFICATE_FILE=%d/cert.pem
Environment=KC_HTTPS_CERTIFICATE_KEY_FILE=%d/key.pem
{% endif %}
{% if not keycloak_initialized %}
Environment=KEYCLOAK_ADMIN={{ keycloak_admin_username }}
Environment=KEYCLOAK_ADMIN_PASSWORD={{ keycloak_admin_password }}
{% endif %}

{% if keycloak_enabled_features | length > 0 %}
Environment=KC_FEATURES={{ keycloak_enabled_features|join(',') }}
{% endif %}

{% if keycloak_disabled_features | length > 0 %}
Environment=KC_FEATURES_DISABLED={{ keycloak_disabled_features|join(',') }}
{% endif %}

[Install]
WantedBy=multi-user.target
