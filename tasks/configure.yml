---
- name: "Check presence of Keycloak {{ keycloak_version }}"
  ansible.builtin.stat:
    path: "{{ keycloak_install_dir }}/keycloak-{{ keycloak_version }}"
  register: release_folder
  become: true
  become_user: "{{ keycloak_service_user }}"

- name: Set Keycloak release folder
  ansible.builtin.set_fact:
    keycloak_release_folder: "{{ keycloak_install_dir }}/keycloak-{{ keycloak_version }}"

- name: Set Keycloak config folder
  ansible.builtin.set_fact:
    keycloak_config_folder: "{{ keycloak_release_folder }}/conf"

- name: "Check presence of init file"
  ansible.builtin.stat:
    path: "{{ keycloak_install_dir }}/.init_done"
  register: init_file

- name: "Define if Keycloak has already been initialized"
  ansible.builtin.set_fact:
    keycloak_initialized: "{{ init_file.stat.exists }}"

- name: "Build Keycloak configuration"
  when: release_folder.stat.exists
  become: true
  become_user: "{{ keycloak_service_user }}"
  block:
    - name: "Define hostname to default value"
      when: keycloak_hostname is not defined
      ansible.builtin.set_fact:
        keycloak_hostname: "{{ ansible_fqdn }}"

    - name: "Ensure Keycloak config folder permissions are correct"
      ansible.builtin.file:
        path: "{{ keycloak_config_folder }}"
        owner: "{{ keycloak_service_user }}"
        group: "{{ keycloak_service_user }}"
        mode: '0770'

    - name: "Define Keycloak Database parameters"
      notify: "Restart Keycloak"
      ansible.builtin.lineinfile:
        path: "{{ keycloak_config_folder }}/keycloak.conf"
        state: present
        owner: "{{ keycloak_service_user }}"
        group: "{{ keycloak_service_user }}"
        mode: '0660'
        line: "{{ item.line }}"
        insertafter: "{{ item.insertafter }}"
        regexp: "{{ item.regexp }}"
      loop: "{{ db_params }}"
      vars:
        db_params:
          - line: "db={{ keycloak_database_vendor }}"
            insertafter: '#db=postgres'
            regexp: '^db=.*'
          - line: "db-username={{ keycloak_database_user }}"
            insertafter: '#db-username=keycloak'
            regexp: '^db-username=.*'
          - line: "db-password={{ keycloak_database_password }}"
            insertafter: '#db-password=password'
            regexp: '^db-password=.*'
          - line: "db-url-database={{ keycloak_database_name }}"
            insertafter: '#db-url=jdbc:postgresql://localhost/keycloak'
            regexp: '^db-url-database=.*'
          - line: "db-url-host={{ keycloak_database_host }}"
            insertafter: 'db-url-database={{ keycloak_database_host }}'
            regexp: '^db-url-host=.*'

    - name: "Define Keycloak Database extended parameters"
      notify: "Restart Keycloak"
      block:
        - name: "Define database port"
          when: keycloak_database_schema is defined
          ansible.builtin.lineinfile:
            path: "{{ keycloak_config_folder }}/keycloak.conf"
            state: present
            owner: "{{ keycloak_service_user }}"
            group: "{{ keycloak_service_user }}"
            mode: '0660'
            line: "db-schema={{ keycloak_database_schema }}"
            insertafter: '#db-url=jdbc:postgresql://localhost/keycloak'
            regexp: "^db-schema=.*"

        - name: "Define database port"
          when: keycloak_database_port is defined
          ansible.builtin.lineinfile:
            path: "{{ keycloak_config_folder }}/keycloak.conf"
            state: present
            owner: "{{ keycloak_service_user }}"
            group: "{{ keycloak_service_user }}"
            mode: '0660'
            line: "db-url-port={{ keycloak_database_port }}"
            insertafter: '#db-url=jdbc:postgresql://localhost/keycloak'
            regexp: "^db-url-port=.*"

        - name: "Define database connection properties"
          when: keycloak_database_properties is defined
          ansible.builtin.lineinfile:
            path: "{{ keycloak_config_folder }}/keycloak.conf"
            state: present
            owner: "{{ keycloak_service_user }}"
            group: "{{ keycloak_service_user }}"
            mode: '0660'
            line: "db-url-properties=;{{ keycloak_database_properties }}"
            insertafter: '#db-url=jdbc:postgresql://localhost/keycloak'
            regexp: "^db-url-properties=.*"

        - name: "Disable database XA transaction support"
          when: keycloak_database_xa_transaction_enabled is defined and not keycloak_database_xa_transaction_enabled
          ansible.builtin.lineinfile:
            path: "{{ keycloak_config_folder }}/keycloak.conf"
            state: present
            owner: "{{ keycloak_service_user }}"
            group: "{{ keycloak_service_user }}"
            mode: '0660'
            line: "transaction-xa-enabled={{ keycloak_database_xa_transaction_enabled }}"
            insertafter: '#db-url=jdbc:postgresql://localhost/keycloak'
            regexp: "^transaction-xa-enabled=.*"

        - name: "Enable database XA transaction support (default)"
          when: keycloak_database_xa_transaction_enabled is not defined or keycloak_database_xa_transaction_enabled
          ansible.builtin.lineinfile:
            path: "{{ keycloak_config_folder }}/keycloak.conf"
            state: absent
            owner: "{{ keycloak_service_user }}"
            group: "{{ keycloak_service_user }}"
            mode: '0660'
            regexp: "^transaction-xa-enabled=.*"

    - name: "Define Keycloak network parameters"
      notify: "Restart Keycloak"
      block:
        - name: "Defaults admin hostname to Keycloak frontend hostname"
          when: keycloak_admin_hostname is not defined
          ansible.builtin.set_fact:
            keycloak_admin_hostname: "{{ keycloak_hostname }}"

        - name: "Define hostnames"
          ansible.builtin.blockinfile:
            path: "{{ keycloak_config_folder }}/keycloak.conf"
            state: present
            owner: "{{ keycloak_service_user }}"
            group: "{{ keycloak_service_user }}"
            mode: '0660'
            marker: '### {mark} HOST ANSIBLE MANAGED BLOCK ###'
            block: |
              hostname={{ keycloak_hostname }}
              hostname-admin={{ keycloak_admin_hostname }}
            insertafter: '#hostname=myhostname'

        - name: "Set proxy mode"
          when: keycloak_proxy_mode is defined
          ansible.builtin.blockinfile:
            path: "{{ keycloak_config_folder }}/keycloak.conf"
            state: present
            owner: "{{ keycloak_service_user }}"
            group: "{{ keycloak_service_user }}"
            mode: '0660'
            marker: '### {mark} PROXY ANSIBLE MANAGED BLOCK ###'
            block: |
              proxy={{ keycloak_proxy_mode }}
              hostname-strict=false
              hostname-strict-backchannel=false
            insertafter: '#proxy=reencrypt'

        - name: "Unset proxy mode if not defined"
          when: keycloak_proxy_mode is not defined
          ansible.builtin.lineinfile:
            path: "{{ keycloak_config_folder }}/keycloak.conf"
            state: absent
            owner: "{{ keycloak_service_user }}"
            group: "{{ keycloak_service_user }}"
            mode: '0660'
            regexp: '^proxy=.*'
        
        - name: "Enable Health endpoint"
          when: keycloak_health_enabled is defined and keycloak_health_enabled
          ansible.builtin.lineinfile:
            path: "{{ keycloak_config_folder }}/keycloak.conf"
            state: present
            owner: "{{ keycloak_service_user }}"
            group: "{{ keycloak_service_user }}"
            mode: '0660'
            regexp: '^health-enabled=.*'
            line: "health-enabled=true"
            insertafter: '#health-enabled=true'

        - name: "Disable health endpoint"
          when: keycloak_health_enabled is not defined or not keycloak_health_enabled
          ansible.builtin.lineinfile:
            path: "{{ keycloak_config_folder }}/keycloak.conf"
            state: absent
            owner: "{{ keycloak_service_user }}"
            group: "{{ keycloak_service_user }}"
            mode: '0660'
            regexp: '^health-enabled=.*'

    - name: "Setup TLS"
      ansible.builtin.include_tasks: "tls/tls_{{ keycloak_tls_certificate_format }}.yml"

    - name: "Set Keycloak build command"
      ansible.builtin.set_fact:
        keycloak_build_command: >
          bin/kc.sh build
          --db={{ keycloak_database_vendor }} 
          --cache=local

    - name: "Build optimized Keycloak distribution"
      when: not keycloak_dev_mode
      ansible.builtin.command: "{{ keycloak_build_command }}"
      args:
        chdir: "{{ keycloak_release_folder }}"
      register: build_output
      changed_when: build_output.rc != 0

    - name: "Initialize keycloak"
      become: true
      become_user: root
      when: not keycloak_initialized or keycloak_force_init
      block:
        - name: "Install initial SystemD service definition"
          ansible.builtin.template:
            src: keycloak.service.j2
            dest: /lib/systemd/system/keycloak.service
            mode: '0644'

        - name: "Start Keycloak to init admin user"
          ansible.builtin.systemd:
            name: keycloak.service
            state: restarted
            daemon_reload: true

        - name: "Wait until Keycloak becomes active"
          ansible.builtin.uri:
            url: "http://localhost:{{ keycloak_http_port }}/health/ready"
            validate_certs: false
          register: keycloak_status
          until: keycloak_status.status == 200 and keycloak_status.json.status == "UP"
          retries: 25
          delay: 5

        - name: "Set Keycloak as initialized"
          ansible.builtin.set_fact:
            keycloak_initialized: true

        - name: "Save initialization marker"
          become: true
          become_user: "{{ keycloak_service_user }}"
          ansible.builtin.file:
            path: "{{ keycloak_install_dir }}/.init_done"
            state: touch
            mode: '0644'

    - name: "Install SystemD service definition without initialization parameters"
      become: true
      become_user: root
      ansible.builtin.template:
        src: keycloak.service.j2
        dest: /lib/systemd/system/keycloak.service
        mode: '0644'

    - name: "Enable Keycloak"
      become: true
      become_user: root
      ansible.builtin.systemd:
        name: keycloak.service
        enabled: true
        daemon_reload: true

    - name: "Wait until Keycloak becomes active"
      ansible.builtin.uri:
        url: "http://localhost:{{ keycloak_http_port }}/health/ready"
        validate_certs: false
      register: keycloak_status
      until: keycloak_status.status == 200 and keycloak_status.json.status == "UP"
      retries: 25
      delay: 5