---
# Check requirements
- name: Test if ansible_user has root capabilities (sudo or equivalent)
  become: true
  ansible.builtin.command: id -u
  register: id_output

- name: Validate ansible_user root capabilities
  ansible.builtin.assert:
    that: id_output.stdout == '0'

- name: "Retrieve last Keycloak version"
  when: keycloak_version is not defined
  ansible.builtin.uri:
    url: "https://api.github.com/repos/keycloak/keycloak/releases/latest"
    return_content: true
  register: github_response

- name: "Set Keycloak version"
  when: keycloak_version is not defined
  ansible.builtin.set_fact:
    keycloak_version: "{{ github_response.json.name }}"

- name: "Ensure required utilities are installed"
  ansible.builtin.package:
    name:
      - acl
      - gzip
      - tar
    state: present
  become: true

- name: "Check presence of Keycloak {{ keycloak_version }}"
  ansible.builtin.stat:
    path: "{{ keycloak_install_dir }}/keycloak-{{ keycloak_version }}"
  register: release_folder
  become: true

- name: "Validate certificate format"
  ansible.builtin.assert:
    that:
      - keycloak_tls_certificate_format in ['keystore', 'pem']
    fail_msg: "'keycloak_tls_certificate_format' should be either 'keystore' or 'pem'"

- name: "Ensure keystore parameters are defined"
  when: keycloak_tls_certificate_format == 'keystore'
  ansible.builtin.assert:
    that:
      - keycloak_keystore_file is defined
      - keycloak_keystore_password is defined
    fail_msg: "define both 'keycloak_keystore_file' and 'keycloak_keystore_password' variables to use keycloak_tls_certificate_format = 'keystore'"

- name: "Ensure TLS certificate parameters are defined"
  when: keycloak_tls_certificate_format == 'pem'
  ansible.builtin.assert:
    that:
      - keycloak_cert_file is defined
      - keycloak_key_file is defined
    fail_msg: "define both 'keycloak_cert_file' and 'keycloak_key_file' variables to use keycloak_tls_certificate_format = 'pem'"
